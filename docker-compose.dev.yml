version: '3.8'

services:
  # MongoDB Database for Development
  mongodb:
    image: mongo:7.0
    container_name: canvas-studio-mongodb-dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: canvas-studio-dev
    volumes:
      - mongodb_dev_data:/data/db
      - mongodb_dev_config:/data/configdb
    networks:
      - canvas-studio-dev-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Canvas Studio Server (Development)
  server:
    build:
      context: .
      dockerfile: server/Dockerfile.dev
    container_name: canvas-studio-server-dev
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      PORT: 4000
      MONGODB_URI: mongodb://mongodb:27017/canvas-studio-dev
      JWT_SECRET: dev-jwt-secret-key
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_EXPIRES_IN: 30d
    volumes:
      - ./server:/app/server
      - /app/server/node_modules
      - server_dev_logs:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - canvas-studio-dev-network
    command: npm run dev --workspace=server

  # Canvas Studio Client (Development)
  client:
    build:
      context: .
      dockerfile: client/Dockerfile.dev
    container_name: canvas-studio-client-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:4000
      VITE_WS_URL: ws://localhost:4000
    volumes:
      - ./client:/app/client
      - /app/client/node_modules
    depends_on:
      server:
        condition: service_healthy
    networks:
      - canvas-studio-dev-network
    command: npm run dev --workspace=client

volumes:
  mongodb_dev_data:
    driver: local
  mongodb_dev_config:
    driver: local
  server_dev_logs:
    driver: local

networks:
  canvas-studio-dev-network:
    driver: bridge
